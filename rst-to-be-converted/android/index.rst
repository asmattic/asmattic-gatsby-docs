Android
========

.. Variables
.. include:: ../vars.rst

.. _android-beginner-tutorials-sec:

Beginner Tutorials
--------------------

* `Tuts + learn Android SDK from scratch <tutsPlusAndroidSeries_>`_
* `Sitepoint TODO App Tutorial <sitepointTodo_>`_
* `Udacity Android Class <udacityAndroid_>`_

.. _tutsPlusAndroidSeries: https://code.tutsplus.com/series/learn-android-sdk-from-scratch--mobile-21677
.. _sitepointTodo: https://www.sitepoint.com/starting-android-development-creating-todo-app/
.. _udacityAndroid: https://classroom.udacity.com/courses/ud851/lessons/e5d74e43-743c-455e-9a70-7545a2da9783/concepts/6dbe6d69-1d5d-44e4-9af7-36526ba7f09e

.. _android-activity-lifecycle-sec:

Activity Lifecycle
--------------------

Different states of the Activity components lifecycle and methods available or envoked in those stages.

.. image:: ../_static/img/activity_lifecycle.png

.. _java-features-sec:

Java Language Features
-----------------------

A non-comprehensive list of features of Java in no particular order with emphasis on elements supported by Android.

Interfaces
~~~~~~~~~~~

From `the Oracle Java docs <https://docs.oracle.com/javase/tutorial/java/IandI/createinterface.html>`_

In the Java programming language, an interface is a reference type, similar to a class, that can contain only constants, method signatures, default methods, static methods, and nested types. Method bodies exist only for default methods and static methods. Interfaces cannot be instantiatedâ€”they can only be implemented by classes or extended by other interfaces. Extension is discussed later in this lesson.

Map
~~~~~

HashMap
~~~~~~~~

ArrayList
~~~~~~~~~~

